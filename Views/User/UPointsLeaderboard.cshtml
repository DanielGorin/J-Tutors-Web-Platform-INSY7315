@using J_Tutors_Web_Platform.Models.Points
@model J_Tutors_Web_Platform.Models.Points.LeaderboardPageVM
@{
    ViewData["Title"] = "Leaderboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["NavSection"] = "User";

    // convenience
    var mode = Model.Filters.Mode;            // Current | Total
    var time = Model.Filters.Time;            // ThisMonth | Last30Days | LastMonth | AllTime

    bool isThisMonth = time == LeaderboardTimeFilter.ThisMonth;
    bool isLast30 = time == LeaderboardTimeFilter.Last30Days;
    bool isLastMonth = time == LeaderboardTimeFilter.LastMonth;
    bool isAllTime = time == LeaderboardTimeFilter.AllTime;

    // description line
    var desc = mode == LeaderboardViewMode.Current
        ? "Current points = points that affect your balance (earns minus spends) within the selected time frame."
        : "Total points = all points earned (only positive amounts) within the selected time frame.";
}

<style>
    /* Minimal tweaks; uses your CSS variables from site.css */
    .lb .table thead th {
        color: var(--text-color);
        border-color: var(--border-color);
    }

    .lb .table tbody td {
        color: var(--text-color);
        border-color: var(--border-color);
    }

    .lb .table .username {
        font-weight: 700;
    }

    .lb .controls .tab-btn.active {
        background: var(--primary-color);
        color: #fff;
        border-color: var(--primary-color);
    }

    .lb .hint {
        color: var(--muted-text-color);
    }
</style>

<div class="lb">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-16">
        <h1 class="mb-0">Leaderboard</h1>
        <a asp-controller="Home" asp-action="UDashboard" class="btn btn-secondary">← Back to Dashboard</a>
    </div>

    <!-- Controls -->
    <div class="card shadow p-24 mb-16 controls">
        <form method="get" class="row g-3 align-items-end">
            <!-- Mode -->
            <div class="col-md-6">
                <label class="form-label d-block">View</label>
                <div class="d-inline-flex gap-2">
                    <input type="hidden" name="time" value="@time" />
                    <input type="hidden" name="pageSize" value="@Model.Filters.PageSize" />
                    <button type="submit" name="mode" value="Current"
                            class="btn btn-outline-primary tab-btn @(mode == LeaderboardViewMode.Current ? "active" : "")">
                        Current
                    </button>
                    <button type="submit" name="mode" value="Total"
                            class="btn btn-outline-primary tab-btn @(mode == LeaderboardViewMode.Total ? "active" : "")">
                        Total
                    </button>
                </div>
            </div>

            <!-- Time (no C# inside attribute areas) -->
            <div class="col-md-6">
                <label for="time" class="form-label">Time</label>
                <select id="time" name="time" class="form-select" onchange="this.form.submit()">
                    @if (isThisMonth)
                    {
                        <option value="ThisMonth" selected>This month</option>
                    }
                    else
                    {
                        <option value="ThisMonth">This month</option>
                    }

                    @if (isLast30)
                    {
                        <option value="Last30Days" selected>Last 30 days</option>
                    }
                    else
                    {
                        <option value="Last30Days">Last 30 days</option>
                    }

                    @if (isLastMonth)
                    {
                        <option value="LastMonth" selected>Last month</option>
                    }
                    else
                    {
                        <option value="LastMonth">Last month</option>
                    }

                    @if (isAllTime)
                    {
                        <option value="AllTime" selected>All-time</option>
                    }
                    else
                    {
                        <option value="AllTime">All-time</option>
                    }
                </select>
            </div>
        </form>

        <!-- Description line under the filter card -->
        <div class="mt-8 hint">@desc</div>
    </div>

    <!-- Table -->
    <div class="card shadow p-24">
        <div class="table-responsive">
            <table class="table align-middle">
                <thead>
                    <tr>
                        <th style="width:80px;">Position</th>
                        <th>Username</th>
                        <th class="text-end">Total Points</th>
                        <th class="text-end">Current Points</th>
                    </tr>
                </thead>
                <tbody>
                    @if (!Model.Rows.Any())
                    {
                        <tr>
                            <td colspan="4">
                                <div class="text-center p-24 text-muted">No leaderboard data to display.</div>
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var r in Model.Rows)
                        {
                            <tr>
                                <td>@r.Rank</td>
                                <td class="username">@r.Username</td>
                                <td class="text-end">@r.TotalEarned</td>
                                <td class="text-end">@r.EarnedInPeriod</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="d-flex justify-content-between align-items-center mt-16">
            <div class="caption">
                Showing @Model.ShowingFrom–@Model.ShowingTo of @Model.TotalRows
            </div>
            <div>
                @{
                    int prev = Math.Max(1, Model.Filters.Page - 1);
                    int next = Model.Filters.Page + 1;
                    bool hasPrev = Model.Filters.Page > 1;
                    bool hasNext = Model.ShowingTo < Model.TotalRows;
                }
                <a class="btn btn-outline-secondary btn-sm @(hasPrev ? "" : "disabled")"
                   href="@(hasPrev ? Url.Action("UPointsLeaderboard","User", new { mode = mode, time = time, page = prev, pageSize = Model.Filters.PageSize }) : "#")">
                    Previous
                </a>
                <a class="btn btn-outline-secondary btn-sm @(hasNext ? "" : "disabled")"
                   href="@(hasNext ? Url.Action("UPointsLeaderboard","User", new { mode = mode, time = time, page = next, pageSize = Model.Filters.PageSize }) : "#")">
                    Next
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
