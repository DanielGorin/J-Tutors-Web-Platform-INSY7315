@model J_Tutors_Web_Platform.ViewModels.AgendaSlotsVM
@using System.Globalization
@{
    Layout = null;
    var vm = Model ?? new J_Tutors_Web_Platform.ViewModels.AgendaSlotsVM();
    string FmtDate(DateTime d) => d.ToString("yyyy-MM-dd");
    string FmtTime(TimeSpan t) => new DateTime(t.Ticks).ToString("HH:mm", CultureInfo.InvariantCulture);
}

<style>
    .agenda-table td, .agenda-table th,
    .agenda-form label, .agenda-form small,
    .agenda-form input, .agenda-form select {
        color: var(--bs-body-color) !important;
    }

    .agenda-section {
        border-radius: .75rem;
        padding: 1rem;
        background: transparent;
        border: 1px solid rgba(127,127,127,.25);
    }

    .table-striped > tbody > tr:nth-of-type(odd) > * {
        color: var(--bs-body-color);
    }

    .text-mono {
        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    }
    /* Make inputs follow theme vars*/
    .agenda-form .form-control {
        background-color: var(--surface-color) !important;
        color: var(--text-color) !important;
        border-color: var(--border-color) !important;
    }

        /* Better placeholder + help text contrast in dark mode */
        .agenda-form .form-control::placeholder {
            color: var(--muted-text-color);
            opacity: 0.9;
        }

    /* Keep labels/help readable but allow .text-muted to be muted again */
    .agenda-form label {
        color: var(--text-color) !important;
    }

    .agenda-form small.text-muted {
        color: var(--muted-text-color) !important;
    }

    /* Focus ring that matches your theme */
    .agenda-form .form-control:focus {
        border-color: var(--primary-color) !important;
        box-shadow: 0 0 0 0.1rem var(--bg-color), 0 0 0 0.25rem var(--primary-color) !important;
</style>

<div class="d-flex justify-content-between align-items-center mb-3">
    <h3 class="mb-0">Availability Slots</h3>
    <small class="text-muted">All slots for your admin profile</small>
</div>

@if (TempData["AgendaOk"] != null)
{
    <div class="alert alert-success">@TempData["AgendaOk"]</div>
}
@if (TempData["AgendaError"] != null)
{
    <div class="alert alert-danger">@TempData["AgendaError"]</div>
}

<!-- Create Slot -->
<div class="agenda-section mb-4">
    <h5 class="mb-3">Create a new slot</h5>

    <form asp-controller="AdminAgenda" asp-action="CreateSlot" method="post" class="agenda-form row g-3" novalidate>
        @Html.AntiForgeryToken()

        <div class="col-12 col-md-4">
            <label for="slot-date" class="form-label">Date</label>
            <input id="slot-date"
                   name="date"
                   type="date"
                   class="form-control"
                   value="@DateTime.Today.ToString("yyyy-MM-dd")"
                   required />
            <small class="text-muted">yyyy-MM-dd</small>
        </div>

        <div class="col-12 col-md-4">
            <label for="slot-start" class="form-label">Start time</label>
            <input id="slot-start"
                   name="start"
                   type="time"
                   class="form-control"
                   value="09:00"
                   step="60"
                   required />
            <small class="text-muted">24h HH:mm (e.g., 09:00)</small>
        </div>

        <div class="col-12 col-md-4">
            <label for="slot-duration" class="form-label">Duration (minutes)</label>
            <input id="slot-duration"
                   name="durationMinutes"
                   type="number"
                   class="form-control"
                   value="60"
                   min="15"
                   max="720"
                   step="15"
                   required />
            <small class="text-muted">15-minute increments (15–720)</small>
        </div>

        <div class="col-12 d-flex justify-content-end gap-2">
            <button type="submit" class="btn btn-primary">
                Add Slot
            </button>
        </div>
    </form>

    <script>
        // Client-side guard: ensure duration is a multiple of 15 with a helpful message
        (function () {
            const dur = document.getElementById('slot-duration');
            if (!dur) return;
            function validate() {
                const v = parseInt(dur.value, 10);
                if (!Number.isFinite(v)) return;
                if (v < 15 || v > 720 || v % 15 !== 0) {
                    dur.setCustomValidity("Duration must be a multiple of 15 between 15 and 720.");
                } else {
                    dur.setCustomValidity("");
                }
            }
            dur.addEventListener('input', validate);
            validate();
        })();
    </script>
</div>

<!-- Slots Table -->
@if (vm.Blocks == null || vm.Blocks.Count == 0)
{
    <div class="alert alert-info">No availability blocks found.</div>
}
else
{
    <div class="table-responsive">
        <table class="table table-bordered table-striped align-middle shadow-sm agenda-table">
            <thead class="table-dark">
                <tr>
                    <th class="text-nowrap">Date</th>
                    <th class="text-nowrap">Start</th>
                    <th class="text-nowrap">End</th>
                    <th class="text-nowrap">Duration</th>
                    <th class="text-nowrap text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var b in vm.Blocks.OrderBy(x => x.BlockDate).ThenBy(x => x.StartTime))
                {
                    var mins = Math.Max(0, (int)(b.EndTime - b.StartTime).TotalMinutes);
                    <tr>
                        <td class="text-mono">@b.BlockDate.ToString("yyyy-MM-dd")</td>
                        <td class="text-mono">@FmtTime(b.StartTime)</td>
                        <td class="text-mono">@FmtTime(b.EndTime)</td>
                        <td>@mins min</td>
                        <td class="text-end">
                            <form asp-controller="AdminAgenda"
                                  asp-action="DeleteSlot"
                                  method="post"
                                  class="d-inline"
                                  onsubmit="return confirm('Delete this slot?');">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@b.AvailabilityBlockID" />
                                <button type="submit" class="btn btn-sm btn-outline-danger">
                                    Delete
                                </button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
