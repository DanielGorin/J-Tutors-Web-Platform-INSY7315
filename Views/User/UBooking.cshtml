@using System.Globalization
@using J_Tutors_Web_Platform.Services
@model J_Tutors_Web_Platform.Controllers.UserBookingViewModel

@{
    ViewData["Title"] = "Book Tutoring";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["NavSection"] = "User";

    bool hasSubject = Model.SelectedSubjectID.HasValue;
}

<style>
    .booking .form-control, .booking .form-select, .booking input[type="range"] {
        background-color: var(--surface-color) !important;
        color: var(--text-color) !important;
        border: 1px solid var(--border-color) !important;
        border-radius: 8px !important;
        padding: 10px 12px !important;
        width: 100%;
    }

        .booking .form-control:focus, .booking .form-select:focus, .booking input[type="range"]:focus {
            border-color: var(--primary-color) !important;
            box-shadow: 0 0 0 .15rem var(--accent-color) !important;
            outline: none !important;
        }

    .totals .stat {
        display: flex;
        justify-content: space-between;
        align-items: baseline
    }

    .muted {
        opacity: .75
    }
</style>

<div class="booking">
    <div class="d-flex justify-content-between align-items-center mb-16">
        <h1 class="mb-0">Book Tutoring</h1>
        <div class="d-flex gap-2">
            <a asp-controller="Home" asp-action="Dashboard" class="btn btn-secondary">← Back</a>
            <a asp-controller="Home" asp-action="MyTutoring" class="btn btn-outline-secondary">My Sessions</a>
        </div>
    </div>

    @* Alerts *@
    @if (TempData["BookingError"] is string be && !string.IsNullOrWhiteSpace(be))
    {
        <div class="alert alert-danger">@be</div>
    }
    @if (TempData["BookingWarn"] is string bw && !string.IsNullOrWhiteSpace(bw))
    {
        <div class="alert alert-warning">@bw</div>
    }
    @if (TempData["BookingOk"] is string bo && !string.IsNullOrWhiteSpace(bo))
    {
        <div class="alert alert-success">@bo</div>
    }

    @* STEP 1: Subject selection *@
    <div class="card shadow p-24 mb-16">
        <h3 class="mb-12">Choose a Subject</h3>
        <div class="row g-3">
            <div class="col-md-6">
                <label class="form-label">Subject</label>
                <select class="form-select"
                        asp-for="SelectedSubjectID"
                        asp-items="@(new SelectList(Model.Subjects.OrderBy(x => x.SubjectName),
                                    nameof(ActiveSubjectDto.SubjectID),
                                    nameof(ActiveSubjectDto.SubjectName),
                                    Model.SelectedSubjectID))"
                        onchange="onSubjectChange(this)"
                        aria-label="Choose Subject">
                    <option value="">Choose…</option>
                </select>
                <div class="caption muted mt-1">Selecting a subject reveals booking options.</div>
            </div>
        </div>
    </div>

    @* STEP 2: Booking inputs (revealed after subject chosen) *@
    @if (hasSubject)
    {
        <div class="card shadow p-24 mb-16">
            <h3 class="mb-16">Booking Details</h3>

            <form asp-action="QuoteBooking" asp-controller="User" method="post" class="row g-3">
                @Html.AntiForgeryToken()

                <input type="hidden" name="SelectedSubjectID" value="@Model.SelectedSubjectID" />

                <div class="col-md-4">
                    <label class="form-label">Hours per Session</label>
                    <input class="form-control" type="number" name="HoursPerSession" step="0.5" min="0.5"
                           value="@(Model.HoursPerSession.ToString(CultureInfo.InvariantCulture))" />
                    @if (Model.MinHours is not null && Model.MaxHours is not null && Model.MinHours > 0)
                    {
                        <div class="caption muted">Allowed: @Model.MinHours–@Model.MaxHours hours</div>
                    }
                </div>

                <div class="col-md-4">
                    <label class="form-label">Number of Sessions</label>
                    <input class="form-control" type="number" name="SessionCount" min="1" step="1"
                           value="@Model.SessionCount" />
                </div>

                <div class="col-md-4">
                    <label class="form-label">Hourly Rate</label>
                    <div class="input-group">
                        <span class="input-group-text">R</span>
                        <input class="form-control" type="text" readonly
                               value="@(Model.HourlyRate?.ToString("0.00", CultureInfo.InvariantCulture) ?? "0.00")" />
                    </div>
                </div>

                <div class="col-12">
                    <label class="form-label">Points Discount (%)</label>
                    <input class="form-range"
                           id="PointsPercent"
                           name="PointsPercent"
                           type="range"
                           min="0"
                           max="@(Model.MaxPointDiscount ?? 0)"
                           step="10"
                           value="@(Model.PointsPercent.ToString(CultureInfo.InvariantCulture))"
                           oninput="document.getElementById('pctLbl').textContent=this.value + '%';" />
                    <div class="d-flex justify-content-between">
                        <span>0%</span>
                        <strong id="pctLbl">@Model.PointsPercent%</strong>
                        <span>@(Model.MaxPointDiscount ?? 0)%</span>
                    </div>
                    <div class="caption muted mt-1">
                        Spending X% of the <strong>base total</strong> in points reduces the cash cost by the same X%.
                    </div>
                </div>

                <div class="col-12 d-flex justify-content-end gap-2 mt-8">
                    <button class="btn btn-primary" type="submit" name="showSlots" value="1">Book (Show Slots)</button>
                </div>
            </form>
        </div>
    }

    @* STEP 3: Quote summary *@
    @if (Model.Quote is not null)
    {
        <div class="card shadow p-24 totals mb-16">
            <h3 class="mb-16">Estimate</h3>
            <div class="row g-3">
                <div class="col-md-3"><div class="stat"><span>Hours/Session</span><strong>@Model.Quote.HoursPerSession</strong></div></div>
                <div class="col-md-3"><div class="stat"><span>Sessions</span><strong>@Model.Quote.SessionCount</strong></div></div>
                <div class="col-md-3"><div class="stat"><span>Rate</span><strong>R @Model.Quote.HourlyRate</strong></div></div>
                <div class="col-md-3"><div class="stat"><span>Base</span><strong>R @Model.Quote.BaseTotal</strong></div></div>
                <div class="col-md-3"><div class="stat"><span>Points %</span><strong>@Model.Quote.PointsPercentApplied%</strong></div></div>
                <div class="col-md-3"><div class="stat"><span>Points Value</span><strong>R @Model.Quote.PointsValueZar</strong></div></div>
                <div class="col-md-3"><div class="stat"><span>Payable</span><strong>R @Model.Quote.PayableAfterPoints</strong></div></div>
            </div>
        </div>
    }

    @* STEP 4: Availability & Reserve *@
    @if (Model.Quote is not null)
    {
        <form asp-action="ReserveBooking" asp-controller="User" method="post" class="card shadow p-24">
            @Html.AntiForgeryToken()
            <input type="hidden" name="subjectId" value="@Model.SelectedSubjectID" />
            <input type="hidden" name="hoursPerSession" value="@Model.Quote.HoursPerSession.ToString(CultureInfo.InvariantCulture)" />
            <input type="hidden" name="pointsPercent" value="@Model.Quote.PointsPercentApplied.ToString(CultureInfo.InvariantCulture)" />
            <input type="hidden" id="selectedStartsCsv" name="selectedStartsCsv" />

            <h3 class="mb-16">Choose up to @Model.Quote.SessionCount slot(s)</h3>

            @if (Model.AvailableSlots.Count == 0)
            {
                <div class="alert alert-warning">No available slots found that fit @Model.Quote.HoursPerSession h in the next 60 days.</div>
            }
            else
            {
                <table class="table align-middle">
                    <thead><tr><th>Date</th><th>Start</th><th class="text-end">Select</th></tr></thead>
                    <tbody>
                        @foreach (var g in Model.AvailableSlots.GroupBy(s => s.Date.Date).OrderBy(g => g.Key))
                        {
                            foreach (var s in g)
                            {
                                var isoDate = s.Date.ToString("yyyy-MM-dd");
                                var startDt = new DateTime(s.Date.Year, s.Date.Month, s.Date.Day).Add(s.StartTime);
                                var hm = startDt.ToString("HH:mm");
                                <tr>
                                    <td>@s.Date.ToString("dddd, dd MMM yyyy")</td>
                                    <td>@hm</td>
                                    <td class="text-end">
                                        <input type="checkbox" class="slot-check" value="@(isoDate)|@(hm)" />
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>

                <div class="d-flex justify-content-end gap-2">
                    <a asp-action="UBooking" asp-route-subjectId="@Model.SelectedSubjectID" class="btn btn-outline-secondary">Back</a>
                    <button class="btn btn-primary" type="submit">Confirm</button>
                </div>
            }
        </form>

        <script>
            // subject change navigates to GET /User/UBooking?subjectId=...
            function onSubjectChange(sel) {
                const v = sel.value || "";
                const url = "@Url.Action("UBooking", "User")" + (v ? ("?subjectId=" + encodeURIComponent(v)) : "");
                window.location.href = url;
            }

            // Enforce max selections == SessionCount, maintain CSV for POST
            (function () {
                const boxes = Array.from(document.querySelectorAll('.slot-check'));
                const hidden = document.getElementById('selectedStartsCsv');
                const max = @Model.Quote.SessionCount;

                function sync() {
                    const chosen = boxes.filter(b => b.checked);
                    if (chosen.length > max) {
                        const last = boxes.reverse().find(b => b.checked);
                        if (last) last.checked = false;
                        boxes.reverse();
                        return sync();
                    }
                    hidden.value = chosen.map(b => b.value).join(',');
                }

                boxes.forEach(b => b && b.addEventListener('change', sync));
                sync();
            })();
        </script>
    }
    else
    {
        <script>
            function onSubjectChange(sel) {
                const v = sel.value || "";
                const url = "@Url.Action("UBooking", "User")" + (v ? ("?subjectId=" + encodeURIComponent(v)) : "");
                window.location.href = url;
            }
        </script>
    }
</div>
