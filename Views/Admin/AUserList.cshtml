@model J_Tutors_Web_Platform.ViewModels.AdminUserDirectoryPageViewModel
@{
    ViewData["Title"] = "User Directory";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["NavSection"] = "Admin";

    var tf = Model.Timeframe;
    string dir = Model.SortDirection.ToUpperInvariant() == "DESC" ? "DESC" : "ASC";
    string ToggleDir(string col) => (Model.SortColumn == col && dir == "ASC") ? "DESC" : "ASC";
    string SortIcon(string col) => Model.SortColumn == col ? (dir == "ASC" ? "↑" : "↓") : "";
}

<div class="card shadow p-3">
    <div class="d-flex justify-content-between align-items-end mb-3">
        <h2 class="mb-0">User Directory</h2>

        <div class="text-muted small">
            Showing timeframe: <strong>@Model.Timeframe</strong>
        </div>


        <form method="get" class="row g-2">
            <div class="col-md-4">
                <label for="search" class="form-label">Search (username / first / surname)</label>
                <input id="search" name="search" value="@Model.Search" class="form-control" />
            </div>
            <div class="col-md-4">
                <label for="timeframe" class="form-label">Timeframe (affects points only)</label>
                <select id="timeframe" name="timeframe" class="form-select">
                    @if (tf == AdminDirectoryTimeframe.ThisMonth)
                    {
                        <option value="ThisMonth" selected="selected">This Month</option>
                    }
                    else
                    {
                        <option value="ThisMonth">This Month</option>
                    }

                    @if (tf == AdminDirectoryTimeframe.Last30Days)
                    {
                        <option value="Last30Days" selected="selected">Last 30 Days</option>
                    }
                    else
                    {
                        <option value="Last30Days">Last 30 Days</option>
                    }

                    @if (tf == AdminDirectoryTimeframe.LastMonth)
                    {
                        <option value="LastMonth" selected="selected">Last Month</option>
                    }
                    else
                    {
                        <option value="LastMonth">Last Month</option>
                    }

                    @if (tf == AdminDirectoryTimeframe.Last4Months)
                    {
                        <option value="Last4Months" selected="selected">Last 4 Months</option>
                    }
                    else
                    {
                        <option value="Last4Months">Last 4 Months</option>
                    }

                    @if (tf == AdminDirectoryTimeframe.AllTime)
                    {
                        <option value="AllTime" selected="selected">All-Time</option>
                    }
                    else
                    {
                        <option value="AllTime">All-Time</option>
                    }

                </select>
            </div>
            <div class="col-md-2">
                <label for="pageSize" class="form-label">
                    Page<br />Size
                </label>

                <select id="pageSize" name="pageSize" class="form-select">
                    @if (Model.PageSize == 10)
                    {
                        <option value="10" selected="selected">10</option>
                    }
                    else
                    {
                        <option value="10">10</option>
                    }

                    @if (Model.PageSize == 25)
                    {
                        <option value="25" selected="selected">25</option>
                    }
                    else
                    {
                        <option value="25">25</option>
                    }

                    @if (Model.PageSize == 50)
                    {
                        <option value="50" selected="selected">50</option>
                    }
                    else
                    {
                        <option value="50">50</option>
                    }

                    @if (Model.PageSize == 100)
                    {
                        <option value="100" selected="selected">100</option>
                    }
                    else
                    {
                        <option value="100">100</option>
                    }

                </select>
            </div>
            <div class="col-md-2 d-flex">
                <button type="submit" class="btn btn-primary ms-auto">Apply</button>
            </div>
        </form>
    </div>

    <div class="table-responsive">
        <table class="table align-middle">
            <thead>
                <tr>
                    @* Clicking headers toggles sort; we preserve current state via query *@
                    <th>
                        <a asp-action="Index" asp-controller="AdminUserDirectory"
                           asp-route-search="@Model.Search"
                           asp-route-timeframe="@Model.Timeframe"
                           asp-route-sortColumn="Username"
                           asp-route-sortDirection="@ToggleDir("Username")"
                           asp-route-page="@Model.Page"
                           asp-route-pageSize="@Model.PageSize">
                            Username @SortIcon("Username")
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-controller="AdminUserDirectory"
                           asp-route-search="@Model.Search"
                           asp-route-timeframe="@Model.Timeframe"
                           asp-route-sortColumn="FirstName"
                           asp-route-sortDirection="@ToggleDir("FirstName")"
                           asp-route-page="@Model.Page"
                           asp-route-pageSize="@Model.PageSize">
                            First Name @SortIcon("FirstName")
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-controller="AdminUserDirectory"
                           asp-route-search="@Model.Search"
                           asp-route-timeframe="@Model.Timeframe"
                           asp-route-sortColumn="Surname"
                           asp-route-sortDirection="@ToggleDir("Surname")"
                           asp-route-page="@Model.Page"
                           asp-route-pageSize="@Model.PageSize">
                            Surname @SortIcon("Surname")
                        </a>
                    </th>
                    <th class="text-end">
                        <a asp-action="Index" asp-controller="AdminUserDirectory"
                           asp-route-search="@Model.Search"
                           asp-route-timeframe="@Model.Timeframe"
                           asp-route-sortColumn="PointsTotal"
                           asp-route-sortDirection="@ToggleDir("PointsTotal")"
                           asp-route-page="@Model.Page"
                           asp-route-pageSize="@Model.PageSize">
                            Total Points @SortIcon("PointsTotal")
                        </a>
                    </th>
                    <th class="text-end">
                        <a asp-action="Index" asp-controller="AdminUserDirectory"
                           asp-route-search="@Model.Search"
                           asp-route-timeframe="@Model.Timeframe"
                           asp-route-sortColumn="PointsCurrent"
                           asp-route-sortDirection="@ToggleDir("PointsCurrent")"
                           asp-route-page="@Model.Page"
                           asp-route-pageSize="@Model.PageSize">
                            Current Points @SortIcon("PointsCurrent")
                        </a>
                    </th>
                    <th class="text-end">
                        <a asp-action="Index" asp-controller="AdminUserDirectory"
                           asp-route-search="@Model.Search"
                           asp-route-timeframe="@Model.Timeframe"
                           asp-route-sortColumn="UnpaidRandTotal"
                           asp-route-sortDirection="@ToggleDir("UnpaidRandTotal")"
                           asp-route-page="@Model.Page"
                           asp-route-pageSize="@Model.PageSize">
                            Unpaid (R) @SortIcon("UnpaidRandTotal")
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-controller="AdminUserDirectory"
                           asp-route-search="@Model.Search"
                           asp-route-timeframe="@Model.Timeframe"
                           asp-route-sortColumn="BirthDate"
                           asp-route-sortDirection="@ToggleDir("BirthDate")"
                           asp-route-page="@Model.Page"
                           asp-route-pageSize="@Model.PageSize">
                            Date of Birth @SortIcon("BirthDate")
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-controller="AdminUserDirectory"
                           asp-route-search="@Model.Search"
                           asp-route-timeframe="@Model.Timeframe"
                           asp-route-sortColumn="LeaderboardVisible"
                           asp-route-sortDirection="@ToggleDir("LeaderboardVisible")"
                           asp-route-page="@Model.Page"
                           asp-route-pageSize="@Model.PageSize">
                            Visible @SortIcon("LeaderboardVisible")
                        </a>
                    </th>
                    <th style="width: 1%;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (!Model.Rows.Any())
                {
                    <tr>
                        <td colspan="10">
                            <div class="text-center text-muted p-4">
                                No users to display (Step 1 skeleton).
                            </div>
                        </td>
                    </tr>
                }
                else
                {
                    foreach (var r in Model.Rows)
                    {
                        <tr>
                            <td>@r.Username</td>
                            <td>@r.FirstName</td>
                            <td>@r.Surname</td>
                            <td class="text-end">@r.PointsTotal</td>
                            <td class="text-end">@r.PointsCurrent</td>
                            <td class="text-end">@r.UnpaidRandTotal.ToString("0.00")</td>
                            <td>@r.BirthDate.ToString("yyyy-MM-dd")</td>
                            <td>@(r.LeaderboardVisible ? "Visible" : "Hidden")</td>
                            <td>
                                <a class="btn btn-sm btn-outline-primary"
                                   asp-action="Details"
                                   asp-controller="AdminUserDirectory"
                                   asp-route-id="@r.UserID">
                                    View Details
                                </a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-between align-items-center">
        <div class="text-muted">
            Showing @Model.ShowingFrom–@Model.ShowingTo of @Model.TotalRows
        </div>
        <div class="btn-group">
            @{
                int prev = Model.Page > 1 ? Model.Page - 1 : 1;
                int next = Model.Page + 1; // Enable/disable when we have real totals in later steps
                bool hasPrev = Model.Page > 1;
                bool hasNext = Model.ShowingTo < Model.TotalRows;
                var commonRoute = new Dictionary<string, string>
            {
                ["search"] = Model.Search ?? "",
                ["timeframe"] = Model.Timeframe.ToString(),   // enum -> string
                ["sortColumn"] = Model.SortColumn,
                ["sortDirection"] = Model.SortDirection,
                ["pageSize"] = Model.PageSize.ToString()
            };
            }
            <a class="btn btn-outline-secondary @(hasPrev ? "" : "disabled")"
               asp-action="Index" asp-controller="AdminUserDirectory"
               asp-route-page="@prev"
               asp-all-route-data="commonRoute">Previous</a>

            <a class="btn btn-outline-secondary @(hasNext ? "" : "disabled")"
               asp-action="Index" asp-controller="AdminUserDirectory"
               asp-route-page="@next"
               asp-all-route-data="commonRoute">Next</a>
        </div>
    </div>
</div>
