@model J_Tutors_Web_Platform.ViewModels.UserBookingViewModel
@{
    ViewData["Title"] = "Book a Session";
}

<div class="container my-3">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3 class="mb-0">Book a Session</h3>
        <small class="text-muted">Select subject, choose duration & discount, pick a time</small>
    </div>

    @if (TempData["BookingOk"] != null)
    {
        <div class="alert alert-success">@TempData["BookingOk"]</div>
    }
    @if (TempData["BookingError"] != null)
    {
        <div class="alert alert-danger">@TempData["BookingError"]</div>
    }

    <div class="card shadow-sm mb-3">
        <div class="card-body">
            <form id="bookingForm" method="post" asp-action="BookingRequest" asp-controller="User">
                @Html.AntiForgeryToken()

                <!-- SUBJECT -->
                <div class="mb-3">
                    <label class="form-label fw-semibold">Subject</label>
                    <select class="form-select" id="subjectId" name="SubjectId" required>
                        <option value="">-- Select --</option>
                        @foreach (var s in Model.Subjects)
                        {
                            <option value="@s.Id">@s.Name</option>

                        }
                    </select>
                </div>

                <!-- CONFIG + SLIDERS -->
                <div id="configSection" class="mb-3" style="display:none;">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="border rounded p-3 h-100">
                                <div class="fw-semibold mb-2">Duration</div>
                                <div class="small text-muted mb-2">
                                    <span id="durationMeta">Loading…</span>
                                </div>
                                <input type="range" class="form-range" id="durationMinutes" name="DurationMinutes" />
                                <div class="mt-2">
                                    <span class="badge bg-secondary">Selected: <span id="durationLabel">-</span></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="border rounded p-3 h-100">
                                <div class="fw-semibold mb-2">Points to Spend (Discount %)</div>
                                <div class="small text-muted mb-2">
                                    <span id="discountMeta">Loading…</span>
                                </div>
                                <input type="range" class="form-range" id="discountPercent" name="DiscountPercent" />
                                <div class="mt-2">
                                    <span class="badge bg-secondary">Selected: <span id="discountLabel">-</span></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- PRICE -->
                <div id="priceSection" class="mb-3" style="display:none;">
                    <div class="border rounded p-3">
                        <div class="fw-semibold mb-2">Price</div>
                        <div class="row g-3">
                            <div class="col-6 col-md-3">
                                <div class="small text-muted">Base</div>
                                <div class="fs-6" id="priceBase">R 0.00</div>
                            </div>
                            <div class="col-6 col-md-3">
                                <div class="small text-muted">Discount</div>
                                <div class="fs-6" id="priceDiscount">R 0.00</div>
                            </div>
                            <div class="col-6 col-md-3">
                                <div class="small text-muted">Points</div>
                                <div class="fs-6" id="pricePoints">0</div>
                            </div>
                            <div class="col-6 col-md-3">
                                <div class="small text-muted">Final</div>
                                <div class="fs-5 fw-semibold" id="priceFinal">R 0.00</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- CALENDAR -->
                <div id="calendarSection" class="mb-3" style="display:none;">
                    <div class="d-flex align-items-center justify-content-between mb-2">
                        <div class="fw-semibold" id="calTitle">Availability</div>
                        <div>
                            <button type="button" class="btn btn-sm btn-outline-secondary me-2" id="calPrev">&lt;</button>
                            <button type="button" class="btn btn-sm btn-outline-secondary" id="calNext">&gt;</button>
                        </div>
                    </div>
                    <div class="border rounded p-2" id="calDays">
                        <div class="text-muted small">Select a subject and adjust the sliders to load availability…</div>
                    </div>
                </div>

                <!-- SELECTED TIME -->
                <div id="timeSection" class="mb-3" style="display:none;">
                    <div class="border rounded p-3">
                        <div class="fw-semibold mb-2">Selected Time</div>
                        <input type="hidden" id="sessionDate" name="SessionDate" />
                        <input type="hidden" id="startTime" name="StartTime" />
                        <div class="small text-muted">Date: <span id="sessionDateLabel">-</span></div>
                        <div class="small text-muted">Start: <span id="startTimeLabel">-</span></div>
                    </div>
                </div>

                <!-- SUBMIT -->
                <div class="d-flex gap-2">
                    <button type="submit" id="requestBtn" class="btn btn-primary" disabled>Request Session</button>
                    <a asp-action="UBooking" asp-controller="User" class="btn btn-outline-secondary">Reset</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
<script>
(function () {
    let cfg = null;
    let currentYear, currentMonth;

    const $subjectId = $("#subjectId");
    const $configSection = $("#configSection");
    const $priceSection = $("#priceSection");
    const $calendarSection = $("#calendarSection");
    const $timeSection = $("#timeSection");
    const $requestBtn = $("#requestBtn");

    const $duration = $("#durationMinutes");
    const $discount = $("#discountPercent");
    const $durationLabel = $("#durationLabel");
    const $discountLabel = $("#discountLabel");
    const $durationMeta = $("#durationMeta");
    const $discountMeta = $("#discountMeta");

    const $priceBase = $("#priceBase");
    const $priceDiscount = $("#priceDiscount");
    const $pricePoints = $("#pricePoints");
    const $priceFinal = $("#priceFinal");

    const $calTitle = $("#calTitle");
    const $calDays = $("#calDays");
    const $calPrev = $("#calPrev");
    const $calNext = $("#calNext");

    const $sessionDate = $("#sessionDate");
    const $startTime = $("#startTime");
    const $sessionDateLabel = $("#sessionDateLabel");
    const $startTimeLabel = $("#startTimeLabel");

    function fmtR(x) { return "R " + (x || 0).toFixed(2); }
    function fmtMin(m) { return m + " min"; }
    function two(n) { return String(n).padStart(2, '0'); }

    function resetSections() {
        $configSection.hide();
        $priceSection.hide();
        $calendarSection.hide();
        $timeSection.hide();
        $requestBtn.prop("disabled", true);
        $sessionDate.val(""); $startTime.val("");
        $sessionDateLabel.text("-"); $startTimeLabel.text("-");
    }

    // Subject change -> load config
    $subjectId.on("change", function () {
        resetSections();
        const sid = parseInt($subjectId.val());
        if (!sid) return;

        $.getJSON("@Url.Action("BookingSubjectConfig", "User")", { subjectId: sid })
            .done(function (data) {
                cfg = data;

                $duration.attr({
                    min: cfg.minDurationMinutes,
                    max: cfg.maxDurationMinutes,
                    step: cfg.durationStepMinutes
                }).val(cfg.minDurationMinutes);

                $discount.attr({
                    min: 0,
                    max: cfg.maxDiscountPercent,
                    step: cfg.discountStepPercent
                }).val(0);

                $durationMeta.text(`Min ${cfg.minDurationMinutes} | Max ${cfg.maxDurationMinutes} | Step ${cfg.durationStepMinutes}`);
                $discountMeta.text(`0% to ${cfg.maxDiscountPercent}% in ${cfg.discountStepPercent}% steps`);

                $durationLabel.text(fmtMin(parseInt($duration.val())));
                $discountLabel.text(parseInt($discount.val()) + "%");

                $configSection.show();
                $priceSection.show();

                const now = new Date();
                currentYear = now.getFullYear();
                currentMonth = now.getMonth() + 1;

                refreshQuote();
                refreshCalendar();
            })
            .fail(function (xhr) {
                alert(xhr.responseJSON?.error || "Failed to load subject config.");
            });
    });

    // Quote updates
    $duration.on("input change", function () {
        $durationLabel.text(fmtMin(parseInt($duration.val())));
        refreshQuote();
        refreshCalendar();
    });
    $discount.on("input change", function () {
        $discountLabel.text(parseInt($discount.val()) + "%");
        refreshQuote();
    });

    function refreshQuote() {
        const sid = parseInt($subjectId.val() || "0");
        if (!sid || !cfg) return;

        $.getJSON("@Url.Action("BookingQuote", "User")", {
            subjectId: sid,
            durationMinutes: parseInt($duration.val()),
            discountPercent: parseInt($discount.val())
        }).done(function (q) {
            $priceBase.text(fmtR(q.baseCost));
            $priceDiscount.text(fmtR(q.moneyDiscount));
            $pricePoints.text(q.pointsToCharge);
            $priceFinal.text(fmtR(q.finalCost));
        });
    }

    // Calendar paging
    $calPrev.on("click", function () {
        if (!cfg) return;
        currentMonth--;
        if (currentMonth < 1) { currentMonth = 12; currentYear--; }
        refreshCalendar();
    });
    $calNext.on("click", function () {
        if (!cfg) return;
        currentMonth++;
        if (currentMonth > 12) { currentMonth = 1; currentYear++; }
        refreshCalendar();
    });

    function refreshCalendar() {
        const sid = parseInt($subjectId.val() || "0");
        if (!sid || !cfg) return;

        $calendarSection.show();
        $calTitle.text(`Availability — ${currentYear}-${two(currentMonth)}`);

        $.getJSON("@Url.Action("BookingAvailability", "User")", {
            subjectId: sid,
            durationMinutes: parseInt($duration.val()),
            year: currentYear,
            month: currentMonth
        }).done(function (cal) {
            renderCalendar(cal);
        }).fail(function (xhr) {
            $calDays.html(`<div class="text-danger small">${xhr.responseJSON?.error || "Failed to load availability."}</div>`);
        });
    }

    function renderCalendar(cal) {
        if (!cal || !cal.days || cal.days.length === 0) {
            $calDays.html('<div class="text-muted small">No available slots this month with the chosen duration.</div>');
            return;
        }

        const dayRows = [];
        cal.days.forEach(function (d) {
            let slotsHtml = "";
            d.slots.forEach(function (slot) {
                let opts = "";
                slot.startOptions.forEach(function (opt) {
                    // opt.sessionDate is yyyy-MM-dd? It will be serialized by ASP.NET as "2025-10-31"
                    // TimeSpan will serialize like "hh:mm:ss". We'll display hh:mm.
                    const isoDate = opt.sessionDate; // "YYYY-MM-DD"
                    const t = opt.startTime; // "HH:MM:SS"
                    const hhmm = t.substring(0,5);
                    opts += `<option data-date="${isoDate}" data-time="${hhmm}" value="${isoDate}T${hhmm}">${isoDate} ${hhmm}</option>`;
                });

                const blockStart = slot.blockStart.toString().substring(0,5);
                const blockEnd = slot.blockEnd.toString().substring(0,5);

                slotsHtml += `
                <div class="border rounded p-2 mb-2">
                    <div class="small text-muted mb-1">Block ${slot.blockDate} — ${blockStart} to ${blockEnd}</div>
                    <div class="d-flex align-items-center gap-2">
                        <select class="form-select form-select-sm pick-start">
                            <option value="">-- Choose start time --</option>
                            ${opts}
                        </select>
                        <button type="button" class="btn btn-sm btn-outline-primary pick-btn" disabled>Pick</button>
                    </div>
                </div>`;
            });

            dayRows.push(`
            <div class="mb-3">
                <div class="fw-semibold mb-1">Day ${d.day}</div>
                ${slotsHtml || '<div class="small text-muted">No time options.</div>'}
            </div>`);
        });

        $calDays.html(dayRows.join(""));

        // enable pick when select has a value
        $calDays.find(".pick-start").on("change", function () {
            const $wrap = $(this).closest(".d-flex");
            const hasVal = !!$(this).val();
            $wrap.find(".pick-btn").prop("disabled", !hasVal);
        });

        $calDays.find(".pick-btn").on("click", function () {
            const $select = $(this).closest(".d-flex").find(".pick-start");
            const val = $select.val(); // "YYYY-MM-DDTHH:MM"
            if (!val) return;

            const date = $select.find(":selected").data("date");
            const time = $select.find(":selected").data("time");

            $sessionDate.val(date);
            $startTime.val(time);

            $sessionDateLabel.text(date);
            $startTimeLabel.text(time);

            $timeSection.show();
            $requestBtn.prop("disabled", false);
        });
    }
})();
</script>
}
