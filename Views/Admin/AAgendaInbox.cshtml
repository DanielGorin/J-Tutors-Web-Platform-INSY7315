@model J_Tutors_Web_Platform.ViewModels.AgendaInboxVM
Layout = null;
<h3 class="mb-12">Inbox</h3>

<div class="mb-12">
    <h5 class="mb-6">Scheduled (@(Model?.Scheduled?.Count ?? 0))</h5>
    @if (Model?.Scheduled == null || !Model.Scheduled.Any())
    {
        <div class="text-muted">none</div>
    }
    else
    {
        <ul class="list-group">
            @foreach (var s in Model.Scheduled.OrderBy(x => x.SessionDate).ThenBy(x => x.StartTime))
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>#@s.TutoringSessionID · @s.SessionDate.ToString("yyyy-MM-dd") @s.StartTime.ToString(@"hh\:mm") — UserID @s.UserID</span>
                    <span class="badge bg-warning">Scheduled</span>
                </li>
            }
        </ul>
    }
</div>

<div class="mb-12">
    <h5 class="mb-6">Accepted (@(Model?.Accepted?.Count ?? 0))</h5>
    @if (Model?.Accepted == null || !Model.Accepted.Any())
    {
        <div class="text-muted">none</div>
    }
    else
    {
        <ul class="list-group">
            @foreach (var s in Model.Accepted.OrderBy(x => x.SessionDate).ThenBy(x => x.StartTime))
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>#@s.TutoringSessionID · @s.SessionDate.ToString("yyyy-MM-dd") @s.StartTime.ToString(@"hh\:mm") — UserID @s.UserID</span>
                    <span class="badge bg-success">Accepted</span>
                </li>
            }
        </ul>
    }
</div>

<div class="mb-12">
    <h5 class="mb-6">Paid (@(Model?.Paid?.Count ?? 0))</h5>
    @if (Model?.Paid == null || !Model.Paid.Any())
    {
        <div class="text-muted">none</div>
    }
    else
    {
        <ul class="list-group">
            @foreach (var s in Model.Paid.OrderByDescending(x => x.PaidDate ?? DateTime.MinValue))
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>#@s.TutoringSessionID · @s.SessionDate.ToString("yyyy-MM-dd") @s.StartTime.ToString(@"hh\:mm") — UserID @s.UserID</span>
                    <span class="badge bg-primary">Paid</span>
                </li>
            }
        </ul>
    }
</div>

<div class="mb-12">
    <h5 class="mb-6">Cancelled (@(Model?.Cancelled?.Count ?? 0))</h5>
    @if (Model?.Cancelled == null || !Model.Cancelled.Any())
    {
        <div class="text-muted">none</div>
    }
    else
    {
        <ul class="list-group">
            @foreach (var s in Model.Cancelled.OrderByDescending(x => x.CancellationDate ?? DateTime.MinValue))
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>#@s.TutoringSessionID · @s.SessionDate.ToString("yyyy-MM-dd") @s.StartTime.ToString(@"hh\:mm") — UserID @s.UserID</span>
                    <span class="badge bg-secondary">Cancelled</span>
                </li>
            }
        </ul>
    }
</div>
